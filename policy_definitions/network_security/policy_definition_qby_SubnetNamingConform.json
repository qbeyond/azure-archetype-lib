{
  "type": "Microsoft.Authorization/policyDefinitions",
  "name": "QBY-TestSnetConvention",
  "properties": {
    "displayName": "Subnet Convention",
    "description": "Test Subnet For Naming Convention, and if it has a rule that denys all inbound traffic",
    "policyType": "Custom",
    "mode": "Indexed",
    "metadata": {
      "version": "1.0.0",
      "category": "NetworkSecurity"
    },
    "parameters": {
      "effect": {
        "type": "String",
        "defaultValue": "Deny",
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Effect",
          "description": "The effect determines what happens when the policy rule is evaluated to match"
        }
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "equals": "Microsoft.Network/virtualNetworks/subnets"
          },
          {
            "field": "name",
            "like": "snet-*"
          },
          {
            "value": "[length(split(field('name'), '-'))]",
            "greaterOrEquals": 6
          },
          {
            "anyOf": [
              {
                "value": "[if(greaterOrEquals(length(split(field('name'), '-')), 5), split(field('name'), '-')[1], 'length of name incorrect')]",
                "match": "#"
              },
              {
                "value": "[if(greaterOrEquals(length(split(field('name'), '-')), 5), split(field('name'), '-')[1], 'length of name incorrect')]",
                "match": "##"
              },
              {
                "value": "[if(greaterOrEquals(length(split(field('name'), '-')), 5), split(field('name'), '-')[1], 'length of name incorrect')]",
                "match": "###"
              }
            ]
          },
          {
            "anyOf": [
              {
                "value": "[if(greaterOrEquals(length(split(field('name'), '-')), 5), split(field('name'), '-')[2], 'length of name incorrect')]",
                "match": "#"
              },
              {
                "value": "[if(greaterOrEquals(length(split(field('name'), '-')), 5), split(field('name'), '-')[2], 'length of name incorrect')]",
                "match": "##"
              },
              {
                "value": "[if(greaterOrEquals(length(split(field('name'), '-')), 5), split(field('name'), '-')[2], 'length of name incorrect')]",
                "match": "###"
              }
            ]
          },
          {
            "anyOf": [
              {
                "value": "[if(greaterOrEquals(length(split(field('name'), '-')), 5), split(field('name'), '-')[3], 'length of name incorrect')]",
                "match": "#"
              },
              {
                "value": "[if(greaterOrEquals(length(split(field('name'), '-')), 5), split(field('name'), '-')[3], 'length of name incorrect')]",
                "match": "##"
              },
              {
                "value": "[if(greaterOrEquals(length(split(field('name'), '-')), 5), split(field('name'), '-')[3], 'length of name incorrect')]",
                "match": "###"
              }
            ]
          },
          {
            "anyOf": [
              {
                "value": "[if(greaterOrEquals(length(split(field('name'), '-')), 5), split(field('name'), '-')[4], 'length of name incorrect')]",
                "match": "#"
              },
              {
                "value": "[if(greaterOrEquals(length(split(field('name'), '-')), 5), split(field('name'), '-')[4], 'length of name incorrect')]",
                "match": "##"
              },
              {
                "value": "[if(greaterOrEquals(length(split(field('name'), '-')), 5), split(field('name'), '-')[4], 'length of name incorrect')]",
                "match": "###"
              }
            ]
          },
          {
            "anyOf": [
              {
                "value": "[if(greaterOrEquals(length(split(field('name'), '-')), 5), split(field('name'), '-')[5], 'length of name incorrect')]",
                "match": "#"
              },
              {
                "value": "[if(greaterOrEquals(length(split(field('name'), '-')), 5), split(field('name'), '-')[5], 'length of name incorrect')]",
                "match": "##"
              }
            ]
          },
          {
            "count": {
              "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.securityRules[*]",
              "where": {
                "allOf": [
                  {
                    "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.securityRules[*].protocol",
                    "equals": "*"
                  },
                  {
                    "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.securityRules[*].sourcePortRange",
                    "equals": "*"
                  },
                  {
                    "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.securityRules[*].destinationPortRange",
                    "equals": "*"
                  },
                  {
                    "value": "[contains(field('name'),replace(replace(current('Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.securityRules[*].sourceAddressPrefix'),'.','-'),'/','-'))]",
                    "equals": "true"
                  },
                  {
                    "value": "[contains(field('name'),replace(replace(current('Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.securityRules[*].destinationAddressPrefix'),'.','-'),'/','-'))]",
                    "like": "true"
                  },
                  {
                    "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.securityRules[*].access",
                    "equals": "Deny"
                  },
                  {
                    "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.securityRules[*].direction",
                    "equals": "Inbound"
                  }
                ]
              }
            },
            "equals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]",
        "details": {}
      }
    }
  }
}